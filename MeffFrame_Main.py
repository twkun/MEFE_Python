"""Subclass of Frame_Main, which is generated by wxFormBuilder."""

import wx
import Frame_Main
import thread
import numpy as np
import pylab as pl
import record
import tools

# Implementing Frame_Main
class MeffFrame_Main( Frame_Main.Frame_Main ):
    def __init__( self, parent ):
        Frame_Main.Frame_Main.__init__( self, parent )
        self.start = False
        self.Wave = record.Wave()
        self.data = []
    # Handlers for Frame_Main events.
    def Sound_Make( self, event ):
        self.Wave.Record()
        # TODO: Implement Sound_Make
        pass
    
    def Sound_Stop( self, event ):
        # TODO: Implement Sound_Stop
        self.Wave.Stop()
        pass
    def Sound_Say(self,event): 
        dt = self.Wave.GetData()
        thread.start_new_thread(self.Wave.Say,(dt,))
    def Sound_Save( self, event ):
        # TODO: Implement Sound_Save
        self.Wave.Save("sd.wav")
        pass
    
    def Signal_Height( self, event ):
        # TODO: Implement Signal_Height
        self.data = self.Wave.GetData()
        self.dh = tools.data_weight(self.data)
        pass
    
    def Singan_Frame( self, event ):
        # TODO: Implement Singan_Frame
        self.dw = tools.data_w_hann(self.dh)
        pass
    
    def Signal_En( self, event ):
        # TODO: Implement Signal_En
        self.de = tools.data_en(self.dw)
        pass
    def Signal_Zero(self,event):
        self.dz = tools.data_w_zero(self.data)
    def say(self,list): 
        for x in range(len(list)):
            self.Wave.Say(list[x])
    def Signal_Point( self, event ):
        # TODO: Implement Signal_Point
        self.dp = tools.data_point(self.data,self.de)
        thread.start_new_thread(self.say,(self.dp,))
        pass
    
    def Signal_MEFF( self, event ):
        # TODO: Implement Signal_MEFF
        pass
    
    def Signal_Show( self, event ):
        # TODO: Implement Signal_Show
        tools.show([self.dz,self.dh,self.dw,self.de])
        pass
    
    
if __name__ == "__main__":
    app = wx.PySimpleApp()
    frame = MeffFrame_Main(None)
    frame.Show(True)
    app.MainLoop()
